buildscript {
    repositories {
        jcenter()
        mavenCentral()

        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.16.0"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.10'
        classpath "gradle.plugin.org.jruyi.gradle:thrift-gradle-plugin:0.4.1"
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
//        options.compilerArgs << "-Xlint:deprecation"
//        options.compilerArgs << "-Xlint:unchecked"
    }

    group 'com.nryanov.schemakeeper'
    version '0.1'
}

subprojects {
    if (it.name != 'schemakeeper-server') {
        apply plugin: 'java-library'
        apply plugin: 'maven-publish'
        apply plugin: 'signing'
    }

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
        compile group: 'org.apache.avro', name: 'avro', version: '1.9.0'

        testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.1'
        testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.1'
        testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version: '5.5.1'
    }

    test {
        useJUnitPlatform()

        testLogging {
            events "passed", "skipped", "failed"
        }

        testClassesDirs = sourceSets.test.output
        classpath = sourceSets.test.runtimeClasspath
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = 'javadoc'
    }

    javadoc {
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    if (it.name != 'schemakeeper-server') {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    artifactId = it.name
                    from components.java
                    artifact sourcesJar
                    artifact javadocJar
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                    pom {
                        name = it.name
                        description = 'Yet another schema registry for Avro, Thrift and Protobuf schemas'
                        url = 'https://github.com/Gr1f0n6x/Schemakeeper'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'Gr1f0n6x'
                                name = 'Nikita Ryanov'
                                email = 'ryanov.nikita@gmail.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git@github.com:Gr1f0n6x/Schemakeeper.git'
                            developerConnection = 'scm:git:git@github.com:Gr1f0n6x/Schemakeeper.git'
                            url = 'https://github.com/Gr1f0n6x/Schemakeeper'

                        }
                    }
                }
            }

            repositories {
                maven {
                    def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

                    credentials {
                        username sonatypeUsername
                        password sonatypePassword
                    }
                }
            }
        }

        if (project.hasProperty("signing.keyId")) {
            signing {
                sign publishing.publications.mavenJava
            }
        }
    }
}

project(':schemakeeper-server') {
    apply plugin: 'scala'

    dependencies {
        compile project(':schemakeeper-common')

        implementation 'org.scala-lang:scala-library:2.12.8'

        compile group: 'com.github.finagle', name: 'finchx-core_2.12', version: '0.29.0'
        compile group: 'com.github.finagle', name: 'finchx-circe_2.12', version: '0.29.0'
        compile group: 'io.circe', name: 'circe-generic_2.12', version: '0.11.1'
        compile group: 'com.twitter', name: 'twitter-server_2.12', version: '19.8.0'
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        compile group: 'com.typesafe', name: 'config', version: '1.3.4'
        compile group: 'com.beachape', name: 'enumeratum_2.12', version: '1.5.13'

        compile group: 'org.tpolecat', name: 'doobie-core_2.12', version: '0.7.0'
        compile group: 'org.tpolecat', name: 'doobie-hikari_2.12', version: '0.7.0'
        compile group: 'org.flywaydb', name: 'flyway-core', version: '6.0.1'

        compile group: 'org.tpolecat', name: 'doobie-quill_2.12', version: '0.7.0'
        compile group: 'org.tpolecat', name: 'doobie-h2_2.12', version: '0.7.0'
        compile group: 'org.postgresql', name: 'postgresql', version: '42.2.6'
        compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'

        testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.8'
        testCompile group: 'org.testcontainers', name: 'postgresql', version: '1.12.0'
        testCompile group: 'org.testcontainers', name: 'mysql', version: '1.12.0'
        testCompile group: 'com.dimafeng', name: 'testcontainers-scala_2.12', version: '0.30.0'
    }

    tasks.withType(ScalaCompile) {
        scalaCompileOptions.additionalParameters = [
                '-feature',
                '-language:implicitConversions',
                '-language:higherKinds',
                '-language:existentials'
        ]
    }

    jar {
        manifest {
            attributes "Main-Class": "schemakeeper.server.SchemaKeeper"
        }

        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
    }
}

project(':schemakeeper-client') {
    dependencies {
        compile project(':schemakeeper-common')
        compile group: 'com.konghq', name: 'unirest-java', version: '3.1.00'

        testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.12.2'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-client"
                pom {
                    name = "schemakeeper-client"
                }
            }
        }
    }
}

project(':schemakeeper-avro') {
    apply plugin: "com.commercehub.gradle.plugin.avro"

    dependencies {
        compile project(':schemakeeper-common')
        compile project(':schemakeeper-client')
    }

    generateAvroProtocol.enabled = false
    generateAvroJava.enabled = false

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-avro"
                pom {
                    name = "schemakeeper-avro"
                }
            }
        }
    }
}

project(':schemakeeper-common') {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-common"
                pom {
                    name = "schemakeeper-common"
                }
            }
        }
    }

}

project(':schemakeeper-protobuf') {
    apply plugin: 'com.google.protobuf'

    dependencies {
        compile project(':schemakeeper-common')
        compile project(':schemakeeper-client')

        compile group: 'org.apache.avro', name: 'avro-protobuf', version: '1.9.0'
        compile group: 'com.google.protobuf', name: 'protobuf-java', version: '3.6.1'
    }

    tasks.whenTaskAdded {task ->
        if(task.name.contains("generateProto")) {
            task.enabled = false
        }
    }

    sourceSets {
        test {
            java {
                srcDirs = ["src/test/java", "$projectDir/generated"]
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-protobuf"
                pom {
                    name = "schemakeeper-protobuf"
                }
            }
        }
    }
}

project(':schemakeeper-thrift') {
    apply plugin: "org.jruyi.thrift"

    dependencies {
        compile project(':schemakeeper-common')
        compile project(':schemakeeper-client')

        compile group: 'org.apache.avro', name: 'avro-thrift', version: '1.9.0'
        compile group: 'org.apache.thrift', name: 'libthrift', version: '0.12.0'
    }

    compileThrift {
        sourceDir "$projectDir/src/test/thrift"
    }

    compileTestJava {
        dependsOn compileThrift
    }

    sourceSets {
        test {
            java {
                srcDirs = ["src/test/java", "$buildDir/generated-sources/thrift"]
            }
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-thrift"
                pom {
                    name = "schemakeeper-thrift"
                }
            }
        }
    }
}

project(':schemakeeper-kafka-avro') {
    apply plugin: 'scala'

    dependencies {
        compile project(':schemakeeper-avro')
        compile project(':schemakeeper-kafka-common')

        testImplementation 'org.scala-lang:scala-library:2.12.8'
        testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.8'
        testCompile 'io.github.embeddedkafka:embedded-kafka_2.12:2.1.0'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-kafka-avro"
                pom {
                    name = "schemakeeper-kafka-avro"
                }
            }
        }
    }
}

project(':schemakeeper-kafka-protobuf') {
    apply plugin: 'scala'

    dependencies {
        compile project(':schemakeeper-protobuf')
        compile project(':schemakeeper-kafka-common')

        testImplementation 'org.scala-lang:scala-library:2.12.8'
        testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.8'
        testCompile 'io.github.embeddedkafka:embedded-kafka_2.12:2.1.0'
        testCompile project(':schemakeeper-protobuf').sourceSets.test.output
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-kafka-protobuf"
                pom {
                    name = "schemakeeper-kafka-protobuf"
                }
            }
        }
    }
}

project(':schemakeeper-kafka-thrift') {
    apply plugin: 'scala'

    dependencies {
        compile project(':schemakeeper-thrift')
        compile project(':schemakeeper-kafka-common')

        testImplementation 'org.scala-lang:scala-library:2.12.8'
        testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.8'
        testCompile 'io.github.embeddedkafka:embedded-kafka_2.12:2.1.0'
        testCompile project(':schemakeeper-thrift').sourceSets.test.output
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-kafka-thrift"
                pom {
                    name = "schemakeeper-kafka-thrift"
                }
            }
        }
    }
}

project(':schemakeeper-kafka-common') {
    dependencies {
        compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.0.0'
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = "schemakeeper-kafka-common"
                pom {
                    name = "schemakeeper-kafka-common"
                }
            }
        }
    }
}